name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: "Run the build with upterm debugging enabled"
        required: false
        default: false

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: ghcr.io/vija02/theopenpresenter_db:main
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - "0.0.0.0:5432:5432"
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Start Alloy with config
        run: |
          docker run -d \
            --name alloy \
            --network host \
            -v ${{ github.workspace }}/config/alloy/minimal.alloy:/etc/alloy/config.alloy \
            -e LOKI_HOST="${{ secrets.LOKI_HOST }}" \
            -e LOKI_AUTH="${{ secrets.LOKI_AUTH }}" \
            -e TEMPO_HOST="${{ secrets.TEMPO_HOST }}" \
            -e TEMPO_AUTH="${{ secrets.TEMPO_AUTH }}" \
            grafana/alloy:v1.5.1 \
            run /etc/alloy/config.alloy \
            --storage.path=/var/lib/alloy/data \
            --server.http.listen-addr=0.0.0.0:12345 \
            --stability.level=experimental
      - name: yarn, lint, build and test
        run: |
          cp .env.ci .env
          yarn --no-immutable
          CONFIRM_DROP=1 yarn setup
          yarn build
          yarn test