version: "3.5"
services:
  theopenpresenter:
    image: ghcr.io/vija02/theopenpresenter_server:main
    container_name: theopenpresenter_server
    restart: always
    depends_on:
      - theopenpresenter_db
    networks:
      - db
      - caddy
      - logs
    environment:
      - NODE_ENV=production
      - ROOT_DATABASE_URL=$ROOT_DATABASE_URL
      - REDIS_URL=$REDIS_URL
      - DATABASE_HOST=$DATABASE_HOST
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_OWNER=$DATABASE_OWNER
      - DATABASE_OWNER_PASSWORD=$DATABASE_OWNER_PASSWORD
      - DATABASE_AUTHENTICATOR=$DATABASE_AUTHENTICATOR
      - DATABASE_AUTHENTICATOR_PASSWORD=$DATABASE_AUTHENTICATOR_PASSWORD
      - DATABASE_VISITOR=$DATABASE_VISITOR
      - SECRET=$SECRET
      - JWT_SECRET=$JWT_SECRET
      - PORT=$PORT
      - ROOT_URL=$ROOT_URL
      - STORAGE_TYPE=$STORAGE_TYPE
      - STORAGE_S3_BUCKET=$STORAGE_S3_BUCKET
      - STORAGE_S3_REGION=$STORAGE_S3_REGION
      - STORAGE_S3_ENDPOINT=$STORAGE_S3_ENDPOINT
      - STORAGE_S3_ACCESS_KEY_ID=$STORAGE_S3_ACCESS_KEY_ID
      - STORAGE_S3_SECRET_ACCESS_KEY=$STORAGE_S3_SECRET_ACCESS_KEY
      - STORAGE_PROXY=$STORAGE_PROXY
      - MEDIA_UPLOAD_CHUNK_SIZE=$MEDIA_UPLOAD_CHUNK_SIZE
      - ENABLED_PLUGINS=$ENABLED_PLUGINS
      - GITHUB_KEY=$GITHUB_KEY
      - GITHUB_SECRET=$GITHUB_SECRET
      - GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
      - GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
      - PLUGIN_GOOGLE_SLIDES_CLIENT_ID=$PLUGIN_GOOGLE_SLIDES_CLIENT_ID
      - PLUGIN_GOOGLE_SLIDES_UNOCONVERT_SERVER=$PLUGIN_GOOGLE_SLIDES_UNOCONVERT_SERVER
      - OTLP_HOST=$OTLP_HOST
    volumes:
      - ./uploads:/app/uploads
    labels:
      caddy: theopenpresenter.com
      caddy.reverse_proxy: "{{upstreams 5678}}"
      caddy.reverse_proxy.transport: "http"
      caddy.request_body.max_size: "1GB"

  theopenpresenter-worker:
    image: ghcr.io/vija02/theopenpresenter_server:main
    container_name: theopenpresenter_worker
    restart: always
    depends_on:
      - theopenpresenter_db
    networks:
      - db
      - logs
    environment:
      - NODE_ENV=production
      - ROOT_DATABASE_URL=$ROOT_DATABASE_URL
      - DATABASE_HOST=$DATABASE_HOST
      - DATABASE_NAME=$DATABASE_NAME
      - DATABASE_OWNER=$DATABASE_OWNER
      - DATABASE_OWNER_PASSWORD=$DATABASE_OWNER_PASSWORD
      - DATABASE_AUTHENTICATOR=$DATABASE_AUTHENTICATOR
      - DATABASE_AUTHENTICATOR_PASSWORD=$DATABASE_AUTHENTICATOR_PASSWORD
      - DATABASE_VISITOR=$DATABASE_VISITOR
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - SECRET=$SECRET
      - JWT_SECRET=$JWT_SECRET
      - PORT=$PORT
      - ROOT_URL=$ROOT_URL
      - STORAGE_TYPE=$STORAGE_TYPE
      - STORAGE_S3_BUCKET=$STORAGE_S3_BUCKET
      - STORAGE_S3_REGION=$STORAGE_S3_REGION
      - STORAGE_S3_ENDPOINT=$STORAGE_S3_ENDPOINT
      - STORAGE_S3_ACCESS_KEY_ID=$STORAGE_S3_ACCESS_KEY_ID
      - STORAGE_S3_SECRET_ACCESS_KEY=$STORAGE_S3_SECRET_ACCESS_KEY
      - STORAGE_PROXY=$STORAGE_PROXY
      - ENABLED_PLUGINS=$ENABLED_PLUGINS
      - TARGET=worker
      - OTLP_HOST=$OTLP_HOST

  theopenpresenter_db:
    image: ghcr.io/vija02/theopenpresenter_db:main
    container_name: theopenpresenter_db

    # Unlike above, the Postgres image cannot start as our user account
    # otherwise we get permission denied errors. So this one has to run as
    # root. :(
    #
    # user: $UID

    working_dir: /

    volumes:
      - theopenpresenter-pg-volume:/var/lib/postgresql/data
      # Mount backup so we can restore easily
      - ./backups/main_db:/backups:ro
      # No need to export
      # - ./data:/data
    ports:
      - "7948:5432"
    restart: unless-stopped
    networks:
      - db
    environment:
      - FORCE_COLOR=$FORCE_COLOR
      - PG_DUMP=$PG_DUMP
      - CONFIRM_DROP=$CONFIRM_DROP
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - DATABASE_HOST=$DATABASE_HOST
      - ROOT_DATABASE_URL=$ROOT_DATABASE_URL
    command:
      postgres -c logging_collector=on -c log_destination=stderr -c log_directory=/var/lib/postgresql/data/logs -c
      log_rotation_age=60 -c log_truncate_on_rotation=on -c log_filename=server_log.hour.%H%M

  main_db_backup:
    image: prodrigestivill/postgres-backup-local:16-alpine
    restart: always
    volumes:
      - ./backups/theopenpresenter_db:/backups
    networks:
      - db
    depends_on:
      - theopenpresenter_db
    environment:
      - POSTGRES_HOST=$DATABASE_HOST
      - POSTGRES_DB=theopenpresenter_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_EXTRA_OPTS=-Z6 --format=custom
      - SCHEDULE=@daily
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - BACKUP_SUFFIX=.tar
      - HEALTHCHECK_PORT=8080

  cache:
    image: redis:7.4-alpine
    container_name: theopenpresenter_redis
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning --requirepass $REDIS_HOST_PASSWORD
    volumes:
      - theopenpresenter-redis-volume:/data
    networks:
      - db

  alloy:
    image: grafana/alloy:v1.5.1
    container_name: theopenpresenter_alloy
    restart: unless-stopped
    volumes:
      - ./config/alloy:/etc/alloy
    networks:
      - logs
    environment:
      - REMOTE_WRITE_HOST=$REMOTE_WRITE_HOST
      - REMOTE_WRITE_AUTH=$REMOTE_WRITE_AUTH
      - LOKI_HOST=$LOKI_HOST
      - LOKI_AUTH=$LOKI_AUTH
      - TEMPO_HOST=$TEMPO_HOST
      - TEMPO_AUTH=$TEMPO_AUTH
      - PYROSCOPE_HOST=$PYROSCOPE_HOST
      - PYROSCOPE_AUTH=$PYROSCOPE_AUTH
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
      - --stability.level=experimental

  unoserver:
    image: philiplehmann/unoserver:3.0.1-1816
    container_name: theopenpresenter_unoserver
    restart: always
    networks:
      - db

networks:
  caddy:
    external: true
  db:
    external: true
  logs:
    external: true

volumes:
  theopenpresenter-pg-volume:
    external: true
  theopenpresenter-redis-volume:
    external: true
